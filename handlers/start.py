import re
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from aiogram.fsm.context import FSMContext

start_router = Router()


default_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[[KeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã")]],
)

valid_names = ("ozon.ru", "wildberries.ru")


def get_default_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí∞–ù–∞–π—Ç–∏ –¥–µ—à–µ–≤–ª–µ", callback_data="find_cheaper"
                )
            ],
            [InlineKeyboardButton(text="‚§¥–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="add_product")],
            [InlineKeyboardButton(text="‚ùå–û—Ç–º–µ–Ω–∞", callback_data="cancel")],
        ]
    )


def is_valid_url(text: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ url"""
    url_pattern = re.compile(
        r"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
    )
    finded_string = url_pattern.search(text)
    if not bool(finded_string):
        return False

    return any(name in text for name in valid_names)


async def get_url(text: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ url –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url_pattern = re.compile(
        r"(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)"
    )
    url = url_pattern.search(text).group(0)
    return url


@start_router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    await state.clear()
    await message.answer(
        "–ü–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä –¥–µ—à–µ–≤–ª–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n\
        –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–∞–π—Ç–∞–º–∏:\nOzon.ru\nWildberries.ru\n\
        –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞",
        reply_markup=default_keyboard,
    )


@start_router.message(Command("help"))
async def cmd_hep(message: Message, state: FSMContext):
    """–ü–æ–º–æ—â—å"""
    await state.clear()
    await message.answer(
        '–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–ª–∏ –Ω–∞–π—Ç–∏ –∞–Ω–∞–ª–æ–≥ –¥–µ—à–µ–≤–ª–µ\n\
        –ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≤—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã'
    )


@start_router.message(F.text.func(is_valid_url))
async def process_url(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ url"""
    url = await get_url(message.text)
    await state.clear()

    await message.answer(f"{url}", reply_markup=get_default_keyboard())


@start_router.callback_query(F.data == "cancel")
async def cancel(callback: Message, state: FSMContext):
    """–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π"""
    await callback.message.delete()
    await state.clear()
    
@start_router.message()
async def process_text(message: Message):
    await message.answer(f'–ù–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ.\n\n'
                         f'–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –∞–Ω–∞–ª–æ–≥–∏ –¥–µ—à–µ–≤–ª–µ‚ú®\n\n'
                         f'–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∞–π—Ç—ã:\n'
                         f'{"\n".join(valid_names)}', reply_markup=default_keyboard)